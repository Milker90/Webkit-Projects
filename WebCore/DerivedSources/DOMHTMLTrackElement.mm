/*
 * This file is part of the WebKit open source project.
 * This file has been generated by generate-bindings.pl. DO NOT MODIFY!
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY
 * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY
 * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. 
 */

#import "config.h"

#if ENABLE(VIDEO_TRACK)

#import "DOMInternal.h"

#import "DOMHTMLTrackElement.h"

#import "DOMBlobInternal.h"
#import "DOMCSSRuleInternal.h"
#import "DOMCSSValueInternal.h"
#import "DOMEventInternal.h"
#import "DOMHTMLTrackElementInternal.h"
#import "DOMNodeInternal.h"
#import "DOMStyleSheetInternal.h"
#import "ExceptionHandlers.h"
#import "HTMLNames.h"
#import "HTMLTrackElement.h"
#import "JSMainThreadExecState.h"
#import "KURL.h"
#import "ThreadCheck.h"
#import "WebScriptObjectPrivate.h"
#import <wtf/GetPtr.h>

#define IMPL static_cast<WebCore::HTMLTrackElement*>(reinterpret_cast<WebCore::Node*>(_internal))

@implementation DOMHTMLTrackElement

- (NSString *)src
{
    WebCore::JSMainThreadNullState state;
    return IMPL->getURLAttribute(WebCore::HTMLNames::srcAttr);
}

- (void)setSrc:(NSString *)newSrc
{
    WebCore::JSMainThreadNullState state;
    IMPL->setAttribute(WebCore::HTMLNames::srcAttr, newSrc);
}

- (NSString *)kind
{
    WebCore::JSMainThreadNullState state;
    return IMPL->kind();
}

- (void)setKind:(NSString *)newKind
{
    WebCore::JSMainThreadNullState state;
    IMPL->setKind(newKind);
}

- (NSString *)srclang
{
    WebCore::JSMainThreadNullState state;
    return IMPL->srclang();
}

- (void)setSrclang:(NSString *)newSrclang
{
    WebCore::JSMainThreadNullState state;
    IMPL->setSrclang(newSrclang);
}

- (NSString *)label
{
    WebCore::JSMainThreadNullState state;
    return IMPL->label();
}

- (void)setLabel:(NSString *)newLabel
{
    WebCore::JSMainThreadNullState state;
    IMPL->setLabel(newLabel);
}

- (BOOL)isDefault
{
    WebCore::JSMainThreadNullState state;
    return IMPL->hasAttribute(WebCore::HTMLNames::defaultAttr);
}

- (void)setIsDefault:(BOOL)newIsDefault
{
    WebCore::JSMainThreadNullState state;
    IMPL->setBooleanAttribute(WebCore::HTMLNames::defaultAttr, newIsDefault);
}

@end

WebCore::HTMLTrackElement* core(DOMHTMLTrackElement *wrapper)
{
    return wrapper ? reinterpret_cast<WebCore::HTMLTrackElement*>(wrapper->_internal) : 0;
}

DOMHTMLTrackElement *kit(WebCore::HTMLTrackElement* value)
{
    { DOM_ASSERT_MAIN_THREAD(); WebCoreThreadViolationCheckRoundOne(); };
    return static_cast<DOMHTMLTrackElement*>(kit(static_cast<WebCore::Node*>(value)));
}

#endif // ENABLE(VIDEO_TRACK)
